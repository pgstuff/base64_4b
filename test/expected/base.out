\set ECHO none
CREATE TABLE base64_4bs(id serial primary key, base64_4b base64_4b unique);
INSERT INTO base64_4bs(base64_4b) VALUES('+-012'); -- The + is 0, and leading 0's are truncated.
INSERT INTO base64_4bs(base64_4b) VALUES('34567');
INSERT INTO base64_4bs(base64_4b) VALUES('89ABC');
INSERT INTO base64_4bs(base64_4b) VALUES('DEFGH');
INSERT INTO base64_4bs(base64_4b) VALUES('IJKLM');
INSERT INTO base64_4bs(base64_4b) VALUES('NOPQR');
INSERT INTO base64_4bs(base64_4b) VALUES('STUVW');
INSERT INTO base64_4bs(base64_4b) VALUES('XYZab');
INSERT INTO base64_4bs(base64_4b) VALUES('cdefg');
INSERT INTO base64_4bs(base64_4b) VALUES('hijkl');
INSERT INTO base64_4bs(base64_4b) VALUES('mnopq');
INSERT INTO base64_4bs(base64_4b) VALUES('rstuv');
INSERT INTO base64_4bs(base64_4b) VALUES('wxyz');
INSERT INTO base64_4bs(base64_4b) VALUES('20004');
INSERT INTO base64_4bs(base64_4b) VALUES('40002');
INSERT INTO base64_4bs(base64_4b) VALUES('30003');
INSERT INTO base64_4bs(base64_4b) VALUES('+'); -- test limits
INSERT INTO base64_4bs(base64_4b) VALUES('zzzzz');
SELECT * FROM base64_4bs ORDER BY base64_4b;
 id | base64_4b 
----+-----------
 17 | +
  1 | -012
 13 | wxyz
 14 | 20004
 16 | 30003
  2 | 34567
 15 | 40002
  3 | 89ABC
  4 | DEFGH
  5 | IJKLM
  6 | NOPQR
  7 | STUVW
  8 | XYZab
  9 | cdefg
 10 | hijkl
 11 | mnopq
 12 | rstuv
 18 | zzzzz
(18 rows)

SELECT MIN(base64_4b) AS min FROM base64_4bs;
 min 
-----
 +
(1 row)

SELECT MAX(base64_4b) AS max FROM base64_4bs;
  max  
-------
 zzzzz
(1 row)

-- index scan
TRUNCATE base64_4bs;
INSERT INTO base64_4bs(base64_4b) SELECT '4'||id FROM generate_series(5678, 8000) id;
SELECT id,base64_4b::text FROM base64_4bs WHERE base64_4b = '48000';
  id  | base64_4b 
------+-----------
 2341 | 48000
(1 row)

SET enable_seqscan = false;
SELECT id,base64_4b::text FROM base64_4bs WHERE base64_4b = '46000';
 id  | base64_4b 
-----+-----------
 341 | 46000
(1 row)

SELECT id,base64_4b FROM base64_4bs WHERE base64_4b >= '47000' LIMIT 5;
  id  | base64_4b 
------+-----------
 1341 | 47000
 1342 | 47001
 1343 | 47002
 1344 | 47003
 1345 | 47004
(5 rows)

SELECT count(id) FROM base64_4bs;
 count 
-------
  2323
(1 row)

SELECT count(id) FROM base64_4bs WHERE base64_4b <> ('46500'::text)::base64_4b;
 count 
-------
  2322
(1 row)

RESET enable_seqscan;
-- operators and conversions
SELECT '0'::base64_4b < '0'::base64_4b;
 ?column? 
----------
 f
(1 row)

SELECT '0'::base64_4b > '0'::base64_4b;
 ?column? 
----------
 f
(1 row)

SELECT '0'::base64_4b < '1'::base64_4b;
 ?column? 
----------
 t
(1 row)

SELECT '0'::base64_4b > '1'::base64_4b;
 ?column? 
----------
 f
(1 row)

SELECT '0'::base64_4b <= '0'::base64_4b;
 ?column? 
----------
 t
(1 row)

SELECT '0'::base64_4b >= '0'::base64_4b;
 ?column? 
----------
 t
(1 row)

SELECT '0'::base64_4b <= '1'::base64_4b;
 ?column? 
----------
 t
(1 row)

SELECT '0'::base64_4b >= '1'::base64_4b;
 ?column? 
----------
 f
(1 row)

SELECT '0'::base64_4b <> '0'::base64_4b;
 ?column? 
----------
 f
(1 row)

SELECT '0'::base64_4b <> '1'::base64_4b;
 ?column? 
----------
 t
(1 row)

SELECT '0'::base64_4b = '0'::base64_4b;
 ?column? 
----------
 t
(1 row)

SELECT '0'::base64_4b = '1'::base64_4b;
 ?column? 
----------
 f
(1 row)

-- COPY FROM/TO
TRUNCATE base64_4bs;
COPY base64_4bs(base64_4b) FROM STDIN;
COPY base64_4bs TO STDOUT;
2342	+
2343	zzzzz
-- clean up --
DROP TABLE base64_4bs;
-- errors
SELECT ''::base64_4b;
ERROR:  base64_4b number "" must be 1 digits or larger.
LINE 1: SELECT ''::base64_4b;
               ^
SELECT 'zzzzzz'::base64_4b;
ERROR:  base64_4b number "zzzzzz" must be 5 digits or smaller.
LINE 1: SELECT 'zzzzzz'::base64_4b;
               ^
SELECT '!'::base64_4b;
ERROR:  base64_4b number "!" must only contain +, -, 0 to 9, A to Z, and a to z.
LINE 1: SELECT '!'::base64_4b;
               ^
